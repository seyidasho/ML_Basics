{
  "hash": "57f81c500db4b30cbaef9291035adf55",
  "result": {
    "markdown": "---\ntitle: Clustering\nauthor: Seyi Dasho\ndate: December 6 2023\nformat:\n  html:\n    code-fold: true\n---\n\n**Clustering** <br>\nClustering is an unsupervised learning technique that groups similar data points together based on their features and characteristics. The goal is to find natural groupings within the data.<br>\n\n**Clustering algorithms include:** <br>\ni.\tK-Means Clustering: Groups data into k clusters by minimizing within-cluster variation. Requires specifying k upfront.<br>\nii.\tHierarchical Clustering: Builds a hierarchy of clusters in a bottom-up (agglomerative) or top-down (divisive) manner.<br>\niii.\tDBSCAN: Finds dense clusters based on a minimum number of nearby points. Does not require specifying k.<br>\n\n**Steps for clustering generally include:** <br>\ni.\tSelecting appropriate features to cluster on <br>\nii.\tChoosing a clustering algorithm and tuning hyperparameters <br>\niii.\tFitting the model to the training data <br>\niv.\tEvaluating the clusters and analysis results <br>\n\n::: {.cell tags='[]' execution_count=1}\n``` {.python .cell-code}\n# Import libraries\nimport numpy as np\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.datasets import make_blobs\n```\n:::\n\n\n::: {.cell tags='[]' execution_count=2}\n``` {.python .cell-code}\n# Generate synthetic data for clustering\nX, y = make_blobs(n_samples=300, centers=4, random_state=42, cluster_std=0.60)\n\n# Finding the optimal number of clusters (K)\n# Standardize the features\nscaler = StandardScaler()\nscaled_data = scaler.fit_transform(X)\n\n# Use the Elbow Method to find the optimal number of clusters\n# ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\ninertia_values = []\nfor k in range(1, 11):\n    kmeans = KMeans(n_clusters=k, random_state=42)\n    kmeans.fit(scaled_data)\n    inertia_values.append(kmeans.inertia_)\n\n# Plotting the Elbow Method\nplt.figure(figsize=(8, 6))\nplt.plot(range(1, 11), inertia_values, marker='o')\nplt.xlabel('Number of Clusters (K)')\nplt.ylabel('Inertia')\nplt.title('Elbow Method')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](clustering_files/figure-html/cell-3-output-1.png){width=667 height=523}\n:::\n:::\n\n\n::: {.cell tags='[]' execution_count=3}\n``` {.python .cell-code}\n# Apply K-means clustering using 4 as optimal cluster number\nkmeans = KMeans(n_clusters=4, random_state=42)\ny_kmeans = kmeans.fit_predict(X)\n\n# Visualize the clusters\nplt.scatter(X[:, 0], X[:, 1], c=y_kmeans, cmap='viridis', edgecolor='k')\ncenters = kmeans.cluster_centers_\nplt.scatter(centers[:, 0], centers[:, 1], c='red', marker='X', s=200, label='Cluster Centers')\nplt.title('K-means Clustering')\nplt.xlabel('Feature 1')\nplt.ylabel('Feature 2')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](clustering_files/figure-html/cell-4-output-1.png){width=600 height=449}\n:::\n:::\n\n\nOverall, clustering is a key unsupervised technique for understanding structure in data, summarizing or compressing data, and identifying anomalies. It complements supervised learning methods in machine learning applications.\n\n",
    "supporting": [
      "clustering_files"
    ],
    "filters": [],
    "includes": {}
  }
}