{
  "hash": "863ae027d2364ea6f9b27725b948544e",
  "result": {
    "markdown": "---\ntitle: Probability Theory and Random Variable\nauthor: Seyi Dasho\nformat:\n  html:\n    code-fold: true\n---\n\n**Probability Theory**<br>\nProbability theory provides the mathematical framework for modeling uncertainty and randomness. It allows us to calculate probabilities, make predictions, and quantify the likelihood of different outcomes.\n\n**Random Variables**<br>\nRandom variables are key components of probability theory. A random variable represents an outcome that has some randomness or uncertainty associated with it. For example, the weather on a given day can be modeled as a random variable.\n\n**Application in Machine Learning**<br>\nMany machine learning algorithms rely on probability and statistics to model the uncertainty in the data. For example, Naive Bayes classifiers use Bayes' theorem to calculate probabilities and make predictions. Regression models estimate probabilities for the relationship between variables.<br>\nWhen training machine learning models, we draw random samples from the full dataset. This introduces randomness into the learning process, helping avoid overfitting and making the models more robust.<br>\nKey probability distributions used in machine learning include the Gaussian (normal) distribution for modeling continuous variables, the Bernoulli distribution for binary variables, and the Categorical distribution for multi-class outcomes.<br>\nOverall, probability and random variables are essential for developing machine learning models that can handle noise, variability, and uncertainty in real-world data. They provide the mathematical language for \"teaching\" machines from random example\n\n**Example using Bernoulli Distribution**\n\n::: {.cell tags='[]' execution_count=1}\n``` {.python .cell-code}\n# Import numpy for numerical operations\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define a Bernoulli distribution \np = 0.3\ndist = np.random.binomial(1, p, size=10000)\n\n# Draw some random samples\nsamples = dist\n\n# Calculate mean and standard deviation\nmean = np.mean(samples) \nstd = np.std(samples)\n\n# Plot a histogram\nplt.hist(samples, bins=10)\nplt.title(\"Bernoulli Distribution\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](Prob_Theory_Rnd_files/figure-html/cell-2-output-1.png){width=583 height=431}\n:::\n:::\n\n\n**Example using Gaussian Distribution**\n\n::: {.cell tags='[]' execution_count=2}\n``` {.python .cell-code}\n# Define a Gaussian distribution\nmu = 0\nsigma = 1\ndist = np.random.normal(mu, sigma, size=10000) \n\n# Draw random samples \nsamples = dist\n\n# Calculate statistics\nmean = np.mean(samples)\nstd = np.std(samples)\n\n# Plot histogram\nplt.hist(samples, bins=20)\nplt.title(\"Gaussian Distribution\")\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](Prob_Theory_Rnd_files/figure-html/cell-3-output-1.png){width=583 height=431}\n:::\n:::\n\n\n",
    "supporting": [
      "Prob_Theory_Rnd_files"
    ],
    "filters": [],
    "includes": {}
  }
}